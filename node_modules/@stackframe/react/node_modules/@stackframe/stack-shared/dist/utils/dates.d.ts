declare function isWeekend(date: Date): boolean;
declare function fromNow(date: Date): string;
declare function fromNowDetailed(date: Date): {
    result: string;
    /**
     * May be Infinity if the result will never change.
     */
    secondsUntilChange: number;
};
/**
 * Returns a string representation of the given date in the format expected by the `datetime-local` input type.
 */
declare function getInputDatetimeLocalString(date: Date): string;
type Interval = [number, 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'year'];
type DayInterval = [number, 'day' | 'week' | 'month' | 'year'];
declare function subtractInterval(date: Date, interval: Interval): Date;
declare function addInterval(date: Date, interval: Interval): Date;
declare const FAR_FUTURE_DATE: Date;
declare function getIntervalsElapsed(anchor: Date, to: Date, repeat: DayInterval): number;

export { type DayInterval, FAR_FUTURE_DATE, type Interval, addInterval, fromNow, fromNowDetailed, getInputDatetimeLocalString, getIntervalsElapsed, isWeekend, subtractInterval };
