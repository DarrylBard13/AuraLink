type FeaturebaseUser = {
    userId: string;
    email: string;
    name?: string;
    profilePicture?: string;
};
type StackAuthUser = {
    id: string;
    primaryEmail: string | null;
    displayName?: string | null;
    profileImageUrl?: string | null;
};
/**
 * Get or create a Featurebase user based on Stack Auth user data.
 * This function ensures that:
 * 1. We never change a user's email address on Featurebase
 * 2. We use Stack Auth user ID as the primary identifier
 * 3. We handle email conflicts by using fallback emails
 * 4. We update profile information when needed
 */
declare function getOrCreateFeaturebaseUser(stackAuthUser: StackAuthUser, options?: {
    apiKey?: string;
}): Promise<{
    userId: string;
    email: string;
}>;

export { type FeaturebaseUser, type StackAuthUser, getOrCreateFeaturebaseUser };
