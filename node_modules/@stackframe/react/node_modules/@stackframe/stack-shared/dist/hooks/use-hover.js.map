{"version":3,"sources":["../../src/hooks/use-hover.tsx"],"sourcesContent":["import { useLayoutEffect } from \"react\";\nimport { useRefState } from \"../utils/react\";\n\nexport function useHover<T extends HTMLElement>(\n  ref: React.RefObject<T>,\n  options: {\n    onMouseEnter?: () => void,\n    onMouseLeave?: () => void,\n  } = {},\n): boolean {\n  // Internal counter: mouseenter++ / mouseleave-- (isHovering = counter > 0)\n  const counter = useRefState(0);\n\n  useLayoutEffect(() => {\n    const el = ref.current;\n    if (!el) return;\n    let incr = 0;\n    let prevInside = false;\n\n    const contains = (r: DOMRect, x: number, y: number) =>\n      x >= r.left && x <= r.right && y >= r.top && y <= r.bottom;\n\n    const enter = () => {\n      incr++;\n      counter.set(c => c + 1);\n      if (counter.current === 1) {\n        options.onMouseEnter?.();\n      }\n    };\n\n    const leave = () => {\n      incr--;\n      requestAnimationFrame(() => {\n        requestAnimationFrame(() => {\n          counter.set(c => c - 1);\n          if (counter.current === 0) {\n            options.onMouseLeave?.();\n          }\n        });\n      });\n    };\n\n    const topMatchesTarget = (x: number, y: number) => {\n      const top = document.elementFromPoint(x, y);\n      return !!(top && (top === el || el.contains(top)));\n    };\n\n    const processPoint = (x: number, y: number) => {\n      const rect = el.getBoundingClientRect();\n\n      // True “hoverability”: inside rect AND not occluded by others\n      const inside = contains(rect, x, y) && topMatchesTarget(x, y);\n      if (inside && !prevInside) {\n        enter();\n      } else if (!inside && prevInside) {\n        leave();\n      }\n      prevInside = inside;\n    };\n\n    const onMove = (e: PointerEvent) => {\n      if (e.pointerType !== \"mouse\") return; // keep it hover-only\n      // Use coalesced points when available\n      const batch = e.getCoalescedEvents();\n      if (batch.length) {\n        for (let eventIndex = 0; eventIndex < batch.length - 1; eventIndex++) {\n          const e1 = batch[eventIndex];\n          const e2 = batch[eventIndex + 1];\n          const steps = 10;\n          for (let i = 0; i <= steps; i++) {\n            processPoint(e1.clientX + (e2.clientX - e1.clientX) * i / steps, e1.clientY + (e2.clientY - e1.clientY) * i / steps);\n          }\n        }\n      } else {\n        processPoint(e.clientX, e.clientY);\n      }\n    };\n\n    window.addEventListener(\"pointermove\", onMove, { passive: true });\n\n    return () => {\n      window.removeEventListener(\"pointermove\", onMove);\n      counter.set(c => c - incr);\n    };\n  }, []);\n\n  return counter.current > 0;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAgC;AAChC,IAAAA,gBAA4B;AAErB,SAAS,SACd,KACA,UAGI,CAAC,GACI;AAET,QAAM,cAAU,2BAAY,CAAC;AAE7B,oCAAgB,MAAM;AACpB,UAAM,KAAK,IAAI;AACf,QAAI,CAAC,GAAI;AACT,QAAI,OAAO;AACX,QAAI,aAAa;AAEjB,UAAM,WAAW,CAAC,GAAY,GAAW,MACvC,KAAK,EAAE,QAAQ,KAAK,EAAE,SAAS,KAAK,EAAE,OAAO,KAAK,EAAE;AAEtD,UAAM,QAAQ,MAAM;AAClB;AACA,cAAQ,IAAI,OAAK,IAAI,CAAC;AACtB,UAAI,QAAQ,YAAY,GAAG;AACzB,gBAAQ,eAAe;AAAA,MACzB;AAAA,IACF;AAEA,UAAM,QAAQ,MAAM;AAClB;AACA,4BAAsB,MAAM;AAC1B,8BAAsB,MAAM;AAC1B,kBAAQ,IAAI,OAAK,IAAI,CAAC;AACtB,cAAI,QAAQ,YAAY,GAAG;AACzB,oBAAQ,eAAe;AAAA,UACzB;AAAA,QACF,CAAC;AAAA,MACH,CAAC;AAAA,IACH;AAEA,UAAM,mBAAmB,CAAC,GAAW,MAAc;AACjD,YAAM,MAAM,SAAS,iBAAiB,GAAG,CAAC;AAC1C,aAAO,CAAC,EAAE,QAAQ,QAAQ,MAAM,GAAG,SAAS,GAAG;AAAA,IACjD;AAEA,UAAM,eAAe,CAAC,GAAW,MAAc;AAC7C,YAAM,OAAO,GAAG,sBAAsB;AAGtC,YAAM,SAAS,SAAS,MAAM,GAAG,CAAC,KAAK,iBAAiB,GAAG,CAAC;AAC5D,UAAI,UAAU,CAAC,YAAY;AACzB,cAAM;AAAA,MACR,WAAW,CAAC,UAAU,YAAY;AAChC,cAAM;AAAA,MACR;AACA,mBAAa;AAAA,IACf;AAEA,UAAM,SAAS,CAAC,MAAoB;AAClC,UAAI,EAAE,gBAAgB,QAAS;AAE/B,YAAM,QAAQ,EAAE,mBAAmB;AACnC,UAAI,MAAM,QAAQ;AAChB,iBAAS,aAAa,GAAG,aAAa,MAAM,SAAS,GAAG,cAAc;AACpE,gBAAM,KAAK,MAAM,UAAU;AAC3B,gBAAM,KAAK,MAAM,aAAa,CAAC;AAC/B,gBAAM,QAAQ;AACd,mBAAS,IAAI,GAAG,KAAK,OAAO,KAAK;AAC/B,yBAAa,GAAG,WAAW,GAAG,UAAU,GAAG,WAAW,IAAI,OAAO,GAAG,WAAW,GAAG,UAAU,GAAG,WAAW,IAAI,KAAK;AAAA,UACrH;AAAA,QACF;AAAA,MACF,OAAO;AACL,qBAAa,EAAE,SAAS,EAAE,OAAO;AAAA,MACnC;AAAA,IACF;AAEA,WAAO,iBAAiB,eAAe,QAAQ,EAAE,SAAS,KAAK,CAAC;AAEhE,WAAO,MAAM;AACX,aAAO,oBAAoB,eAAe,MAAM;AAChD,cAAQ,IAAI,OAAK,IAAI,IAAI;AAAA,IAC3B;AAAA,EACF,GAAG,CAAC,CAAC;AAEL,SAAO,QAAQ,UAAU;AAC3B;","names":["import_react"]}