{"version":3,"sources":["../../../src/interface/crud/oauth-providers.ts"],"sourcesContent":["import { CrudTypeOf, createCrud } from \"../../crud\";\nimport {\n  oauthProviderAccountIdSchema,\n  oauthProviderAllowConnectedAccountsSchema,\n  oauthProviderAllowSignInSchema,\n  oauthProviderEmailSchema,\n  oauthProviderIdSchema,\n  oauthProviderProviderConfigIdSchema,\n  oauthProviderTypeSchema,\n  userIdOrMeSchema,\n  yupMixed,\n  yupObject,\n  yupString\n} from \"../../schema-fields\";\n\nexport const oauthProviderClientReadSchema = yupObject({\n  user_id: userIdOrMeSchema.defined(),\n  id: oauthProviderIdSchema.defined(),\n  email: oauthProviderEmailSchema.optional(),\n  provider_config_id: oauthProviderProviderConfigIdSchema.defined(),\n  type: oauthProviderTypeSchema.defined(),\n  allow_sign_in: oauthProviderAllowSignInSchema.defined(),\n  allow_connected_accounts: oauthProviderAllowConnectedAccountsSchema.defined(),\n}).defined();\n\nexport const oauthProviderServerReadSchema = oauthProviderClientReadSchema.concat(yupObject({\n  account_id: oauthProviderAccountIdSchema.defined(),\n}));\n\nexport const oauthProviderCrudClientUpdateSchema = yupObject({\n  allow_sign_in: oauthProviderAllowSignInSchema.optional(),\n  allow_connected_accounts: oauthProviderAllowConnectedAccountsSchema.optional(),\n}).defined();\n\nexport const oauthProviderCrudServerUpdateSchema = oauthProviderCrudClientUpdateSchema.concat(yupObject({\n  email: oauthProviderEmailSchema.optional(),\n  account_id: oauthProviderAccountIdSchema.optional(),\n}));\n\nexport const oauthProviderCrudServerCreateSchema = yupObject({\n  user_id: userIdOrMeSchema.defined(),\n  provider_config_id: yupString().defined(),\n  email: oauthProviderEmailSchema.optional(),\n  allow_sign_in: oauthProviderAllowSignInSchema.defined(),\n  allow_connected_accounts: oauthProviderAllowConnectedAccountsSchema.defined(),\n  account_id: oauthProviderAccountIdSchema.defined(),\n}).defined();\n\nexport const oauthProviderCrudClientDeleteSchema = yupMixed();\n\nexport const oauthProviderCrud = createCrud({\n  clientReadSchema: oauthProviderClientReadSchema,\n  clientUpdateSchema: oauthProviderCrudClientUpdateSchema,\n  clientDeleteSchema: oauthProviderCrudClientDeleteSchema,\n  serverReadSchema: oauthProviderServerReadSchema,\n  serverUpdateSchema: oauthProviderCrudServerUpdateSchema,\n  serverCreateSchema: oauthProviderCrudServerCreateSchema,\n  docs: {\n    clientRead: {\n      summary: \"Get an OAuth provider\",\n      description: \"Retrieves a specific OAuth provider by the user ID and the OAuth provider ID.\",\n      tags: [\"OAuth Providers\"],\n    },\n    serverCreate: {\n      summary: \"Create an OAuth provider\",\n      description: \"Add a new OAuth provider for a user.\",\n      tags: [\"OAuth Providers\"],\n    },\n    serverUpdate: {\n      summary: \"Update an OAuth provider\",\n      description: \"Updates an existing OAuth provider. Only the values provided will be updated.\",\n      tags: [\"OAuth Providers\"],\n    },\n    clientDelete: {\n      summary: \"Delete an OAuth provider\",\n      description: \"Removes an OAuth provider for a given user.\",\n      tags: [\"OAuth Providers\"],\n    },\n    clientList: {\n      summary: \"List OAuth providers\",\n      description: \"Retrieves a list of all OAuth providers for a user.\",\n      tags: [\"OAuth Providers\"],\n    },\n  }\n});\nexport type OAuthProviderCrud = CrudTypeOf<typeof oauthProviderCrud>;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAuC;AACvC,2BAYO;AAEA,IAAM,oCAAgC,gCAAU;AAAA,EACrD,SAAS,sCAAiB,QAAQ;AAAA,EAClC,IAAI,2CAAsB,QAAQ;AAAA,EAClC,OAAO,8CAAyB,SAAS;AAAA,EACzC,oBAAoB,yDAAoC,QAAQ;AAAA,EAChE,MAAM,6CAAwB,QAAQ;AAAA,EACtC,eAAe,oDAA+B,QAAQ;AAAA,EACtD,0BAA0B,+DAA0C,QAAQ;AAC9E,CAAC,EAAE,QAAQ;AAEJ,IAAM,gCAAgC,8BAA8B,WAAO,gCAAU;AAAA,EAC1F,YAAY,kDAA6B,QAAQ;AACnD,CAAC,CAAC;AAEK,IAAM,0CAAsC,gCAAU;AAAA,EAC3D,eAAe,oDAA+B,SAAS;AAAA,EACvD,0BAA0B,+DAA0C,SAAS;AAC/E,CAAC,EAAE,QAAQ;AAEJ,IAAM,sCAAsC,oCAAoC,WAAO,gCAAU;AAAA,EACtG,OAAO,8CAAyB,SAAS;AAAA,EACzC,YAAY,kDAA6B,SAAS;AACpD,CAAC,CAAC;AAEK,IAAM,0CAAsC,gCAAU;AAAA,EAC3D,SAAS,sCAAiB,QAAQ;AAAA,EAClC,wBAAoB,gCAAU,EAAE,QAAQ;AAAA,EACxC,OAAO,8CAAyB,SAAS;AAAA,EACzC,eAAe,oDAA+B,QAAQ;AAAA,EACtD,0BAA0B,+DAA0C,QAAQ;AAAA,EAC5E,YAAY,kDAA6B,QAAQ;AACnD,CAAC,EAAE,QAAQ;AAEJ,IAAM,0CAAsC,+BAAS;AAErD,IAAM,wBAAoB,wBAAW;AAAA,EAC1C,kBAAkB;AAAA,EAClB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,kBAAkB;AAAA,EAClB,oBAAoB;AAAA,EACpB,oBAAoB;AAAA,EACpB,MAAM;AAAA,IACJ,YAAY;AAAA,MACV,SAAS;AAAA,MACT,aAAa;AAAA,MACb,MAAM,CAAC,iBAAiB;AAAA,IAC1B;AAAA,IACA,cAAc;AAAA,MACZ,SAAS;AAAA,MACT,aAAa;AAAA,MACb,MAAM,CAAC,iBAAiB;AAAA,IAC1B;AAAA,IACA,cAAc;AAAA,MACZ,SAAS;AAAA,MACT,aAAa;AAAA,MACb,MAAM,CAAC,iBAAiB;AAAA,IAC1B;AAAA,IACA,cAAc;AAAA,MACZ,SAAS;AAAA,MACT,aAAa;AAAA,MACb,MAAM,CAAC,iBAAiB;AAAA,IAC1B;AAAA,IACA,YAAY;AAAA,MACV,SAAS;AAAA,MACT,aAAa;AAAA,MACb,MAAM,CAAC,iBAAiB;AAAA,IAC1B;AAAA,EACF;AACF,CAAC;","names":[]}