import { CrudSchemaFromOptions, CrudTypeOf } from '../../crud.js';
import * as yup from 'yup';
import '../../utils/types.js';
import '../../utils/strings.js';

declare const configOverrideCrudAdminReadSchema: yup.ObjectSchema<{}, yup.AnyObject, {}, "">;
declare const configOverrideCrudAdminUpdateSchema: yup.ObjectSchema<{
    config_override_string: string | undefined;
}, yup.AnyObject, {
    config_override_string: undefined;
}, "">;
declare const configOverrideCrud: CrudSchemaFromOptions<{
    adminReadSchema: yup.ObjectSchema<{}, yup.AnyObject, {}, "">;
    adminUpdateSchema: yup.ObjectSchema<{
        config_override_string: string | undefined;
    }, yup.AnyObject, {
        config_override_string: undefined;
    }, "">;
    docs: {
        adminUpdate: {
            summary: string;
            description: string;
            tags: string[];
        };
    };
}>;
type ConfigOverrideCrud = CrudTypeOf<typeof configOverrideCrud>;
declare const configCrudAdminReadSchema: yup.ObjectSchema<{
    config_string: string;
}, yup.AnyObject, {
    config_string: undefined;
}, "">;
declare const configCrud: CrudSchemaFromOptions<{
    adminReadSchema: yup.ObjectSchema<{
        config_string: string;
    }, yup.AnyObject, {
        config_string: undefined;
    }, "">;
    docs: {
        adminRead: {
            summary: string;
            description: string;
            tags: string[];
        };
    };
}>;
type ConfigCrud = CrudTypeOf<typeof configCrud>;

export { type ConfigCrud, type ConfigOverrideCrud, configCrud, configCrudAdminReadSchema, configOverrideCrud, configOverrideCrudAdminReadSchema, configOverrideCrudAdminUpdateSchema };
