{"version":3,"sources":["../../../src/utils/esbuild.tsx"],"sourcesContent":["import * as esbuild from 'esbuild-wasm/lib/browser.js';\nimport { join } from 'path';\nimport { isBrowserLike } from './env';\nimport { StackAssertionError, throwErr } from \"./errors\";\nimport { Result } from \"./results\";\nimport { traceSpan, withTraceSpan } from './telemetry';\n\nconst esbuildWasmUrl = `https://unpkg.com/esbuild-wasm@${esbuild.version}/esbuild.wasm`;\n\nlet esbuildInitializePromise: Promise<void> | null = null;\n// esbuild requires self property to be set, and it is not set by default in nodejs\n(globalThis.self as any) ??= globalThis as any;\n\nexport function initializeEsbuild(): Promise<void> {\n  if (!esbuildInitializePromise) {\n    esbuildInitializePromise = withTraceSpan('initializeEsbuild', async () => {\n      if (isBrowserLike()) {\n        await esbuild.initialize({\n          wasmURL: esbuildWasmUrl,\n        });\n      } else {\n        const esbuildWasmResponse = await fetch(esbuildWasmUrl);\n        if (!esbuildWasmResponse.ok) {\n          throw new StackAssertionError(`Failed to fetch esbuild.wasm: ${esbuildWasmResponse.status} ${esbuildWasmResponse.statusText}: ${await esbuildWasmResponse.text()}`);\n        }\n        const esbuildWasm = await esbuildWasmResponse.arrayBuffer();\n        const esbuildWasmArray = new Uint8Array(esbuildWasm);\n        if (esbuildWasmArray[0] !== 0x00 || esbuildWasmArray[1] !== 0x61 || esbuildWasmArray[2] !== 0x73 || esbuildWasmArray[3] !== 0x6d) {\n          throw new StackAssertionError(`Invalid esbuild.wasm file: ${new TextDecoder().decode(esbuildWasmArray)}`);\n        }\n        const esbuildWasmModule = new WebAssembly.Module(esbuildWasm);\n        await esbuild.initialize({\n          wasmModule: esbuildWasmModule,\n          worker: false,\n        });\n      }\n    })();\n  }\n\n  return esbuildInitializePromise;\n}\n\nexport async function bundleJavaScript(sourceFiles: Record<string, string> & { '/entry.js': string }, options: {\n  format?: 'iife' | 'esm' | 'cjs',\n  externalPackages?: Record<string, string>,\n  keepAsImports?: string[],\n  sourcemap?: false | 'inline',\n  allowHttpImports?: boolean,\n} = {}): Promise<Result<string, string>> {\n  await initializeEsbuild();\n\n  const sourceFilesMap = new Map(Object.entries(sourceFiles));\n  const externalPackagesMap = new Map(Object.entries(options.externalPackages ?? {}));\n  const keepAsImports = options.keepAsImports ?? [];\n\n  const httpImportCache = new Map<string, { contents: string, loader: esbuild.Loader, resolveDir: string }>();\n\n  const extToLoader: Map<string, esbuild.Loader> = new Map([\n    ['tsx', 'tsx'],\n    ['ts', 'ts'],\n    ['js', 'js'],\n    ['jsx', 'jsx'],\n    ['json', 'json'],\n    ['css', 'css'],\n  ]);\n  let result;\n  try {\n    result = await traceSpan('bundleJavaScript', async () => await esbuild.build({\n      entryPoints: ['/entry.js'],\n      bundle: true,\n      write: false,\n      format: options.format ?? 'iife',\n      platform: 'browser',\n      target: 'es2015',\n      jsx: 'automatic',\n      sourcemap: options.sourcemap ?? 'inline',\n      external: keepAsImports,\n      plugins: [\n        ...options.allowHttpImports ? [{\n          name: \"esm-sh-only\",\n          setup(build: esbuild.PluginBuild) {\n            // Handle absolute URLs and relative imports from esm.sh modules.\n            build.onResolve({ filter: /.*/ }, (args) => {\n              // Only touch absolute http(s) specifiers or children of our own namespace\n              const isHttp = args.path.startsWith(\"http://\") || args.path.startsWith(\"https://\");\n              const fromEsmNs = args.namespace === \"esm-sh\";\n\n              if (!isHttp && !fromEsmNs) return null; // Let other plugins handle bare/relative/local\n\n              // Resolve relative URLs inside esm.sh-fetched modules\n              const url = new URL(args.path, fromEsmNs ? args.importer : undefined);\n\n              if (url.protocol !== \"https:\" || url.host !== \"esm.sh\") {\n                throw new Error(`Blocked non-esm.sh URL import: ${url.href}`);\n              }\n\n              return { path: url.href, namespace: \"esm-sh\" };\n            });\n\n            build.onLoad({ filter: /.*/, namespace: \"esm-sh\" }, async (args) => {\n              if (httpImportCache.has(args.path)) return httpImportCache.get(args.path)!;\n\n              const res = await fetch(args.path, { redirect: \"follow\" });\n              if (!res.ok) throw new Error(`Fetch ${res.status} ${res.statusText} for ${args.path}`);\n              const finalUrl = new URL(res.url);\n              // Defensive: follow shouldn’t leave esm.sh, but re-check.\n              if (finalUrl.host !== \"esm.sh\") {\n                throw new Error(`Redirect escaped esm.sh: ${finalUrl.href}`);\n              }\n\n              const ct = (res.headers.get(\"content-type\") || \"\").toLowerCase();\n              let loader: esbuild.Loader =\n                ct.includes(\"css\") ? \"css\" :\n                ct.includes(\"json\") ? \"json\" :\n                ct.includes(\"typescript\") ? \"ts\" :\n                ct.includes(\"jsx\") ? \"jsx\" :\n                ct.includes(\"tsx\") ? \"tsx\" :\n                  \"js\";\n\n              // Fallback by extension (esm.sh sometimes omits CT)\n              const p = finalUrl.pathname;\n              if (p.endsWith(\".css\")) loader = \"css\";\n              else if (p.endsWith(\".json\")) loader = \"json\";\n              else if (p.endsWith(\".ts\")) loader = \"ts\";\n              else if (p.endsWith(\".tsx\")) loader = \"tsx\";\n              else if (p.endsWith(\".jsx\")) loader = \"jsx\";\n\n              const contents = await res.text();\n              const result = {\n                contents,\n                loader,\n                // Ensures relative imports inside that module resolve against the file’s URL\n                resolveDir: new URL(\".\", finalUrl.href).toString(),\n                watchFiles: [finalUrl.href],\n              };\n              httpImportCache.set(args.path, result);\n              return result;\n            });\n          },\n        } as esbuild.Plugin] : [],\n        {\n          name: 'replace-packages-with-globals',\n          setup(build) {\n            build.onResolve({ filter: /.*/ }, args => {\n              // Skip packages that should remain external (not be shimmed)\n              if (keepAsImports.includes(args.path)) {\n                return undefined;\n              }\n              if (externalPackagesMap.has(args.path)) {\n                return { path: args.path, namespace: 'package-shim' };\n              }\n              return undefined;\n            });\n\n            build.onLoad({ filter: /.*/, namespace: 'package-shim' }, (args) => {\n              const contents = externalPackagesMap.get(args.path);\n              if (contents == null) throw new StackAssertionError(`esbuild requested file ${args.path} that is not in the virtual file system`);\n\n              return { contents, loader: 'ts' };\n            });\n          },\n        },\n        {\n          name: 'virtual-fs',\n          setup(build) {\n            build.onResolve({ filter: /.*/ }, args => {\n              const absolutePath = join(\"/\", args.path);\n              if (sourceFilesMap.has(absolutePath)) {\n                return { path: absolutePath, namespace: 'virtual' };\n              }\n              return undefined;\n            });\n\n            /* 2️⃣  Load the module from the map */\n            build.onLoad({ filter: /.*/, namespace: 'virtual' }, args => {\n              const contents = sourceFilesMap.get(args.path);\n              if (contents == null) throw new StackAssertionError(`esbuild requested file ${args.path} that is not in the virtual file system`);\n\n              const ext = args.path.split('.').pop() ?? '';\n              const loader = extToLoader.get(ext) ?? throwErr(`esbuild requested file ${args.path} with unknown extension ${ext}`);\n\n              return { contents, loader };\n            });\n          },\n        },\n      ],\n    }));\n  } catch (e) {\n    if (e instanceof Error && e.message.startsWith(\"Build failed with \")) {\n      return Result.error(e.message);\n    }\n    throw e;\n  }\n\n  if (result.errors.length > 0) {\n    return Result.error(result.errors.map(e => e.text).join('\\n'));\n  }\n\n  if (result.outputFiles.length > 0) {\n    return Result.ok(result.outputFiles[0].text);\n  }\n  return throwErr(\"No output generated??\");\n}\n"],"mappings":"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","names":["build","result"]}