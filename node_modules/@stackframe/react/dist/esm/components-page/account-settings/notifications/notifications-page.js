// src/components-page/account-settings/notifications/notifications-page.tsx
import { useUser } from "../../../lib/hooks.js";
import { useTranslation } from "../../../lib/translations.js";
import { PageLayout } from "../page-layout.js";
import { Switch } from "@stackframe/stack-ui";
import { Separator, Typography } from "@stackframe/stack-ui";
import { jsx, jsxs } from "react/jsx-runtime";
function NotificationsPage() {
  const { t } = useTranslation();
  const user = useUser({ or: "redirect" });
  const notificationCategories = user.useNotificationCategories();
  return /* @__PURE__ */ jsxs(PageLayout, { children: [
    /* @__PURE__ */ jsx(Separator, {}),
    /* @__PURE__ */ jsxs("div", { className: "flex flex-col gap-2", children: [
      /* @__PURE__ */ jsx("div", { className: "sm:flex-1 flex flex-col justify-center pb-2", children: /* @__PURE__ */ jsx(Typography, { className: "font-medium", children: t("Choose which emails you want to receive") }) }),
      notificationCategories.map((category) => /* @__PURE__ */ jsxs("div", { className: "flex justify-start gap-4 items-center", children: [
        /* @__PURE__ */ jsx(
          Switch,
          {
            checked: category.enabled,
            onCheckedChange: (value) => void category.setEnabled(value),
            disabled: !category.canDisable
          }
        ),
        /* @__PURE__ */ jsx(Typography, { children: category.name }),
        !category.canDisable && /* @__PURE__ */ jsx(Typography, { variant: "secondary", type: "footnote", children: "(cannot be disabled)" })
      ] }, category.id))
    ] })
  ] });
}
export {
  NotificationsPage
};
//# sourceMappingURL=notifications-page.js.map