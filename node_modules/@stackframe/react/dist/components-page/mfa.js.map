{"version":3,"sources":["../../src/components-page/mfa.tsx"],"sourcesContent":["\"use client\";\n\n\n//===========================================\n// THIS FILE IS AUTO-GENERATED FROM TEMPLATE. DO NOT EDIT IT DIRECTLY\n//===========================================\n\nimport { KnownErrors } from \"@stackframe/stack-shared\";\nimport {\n  Button,\n  InputOTP,\n  InputOTPGroup,\n  InputOTPSlot,\n  Spinner,\n  Typography,\n  cn,\n} from \"@stackframe/stack-ui\";\nimport { CheckIcon } from \"lucide-react\";\nimport { useEffect, useMemo, useRef, useState } from \"react\";\nimport { useStackApp } from \"..\";\nimport { FormWarningText } from \"../components/elements/form-warning\";\nimport { MaybeFullPage } from \"../components/elements/maybe-full-page\";\nimport { useTranslation } from \"../lib/translations\";\n\nfunction MfaForm({ onSuccess, onCancel }: {\n  onSuccess?: () => void,\n  onCancel?: () => void,\n}) {\n  const stackApp = useStackApp();\n  const { t } = useTranslation();\n  const [otp, setOtp] = useState<string>(\"\");\n  const formRef = useRef<HTMLFormElement>(null);\n\n  const [submitting, setSubmitting] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n  const [verified, setVerified] = useState<boolean>(false);\n\n  const [attemptCode, setAttemptCode] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (!attemptCode && typeof window !== \"undefined\") {\n      const code = window.sessionStorage.getItem(\"stack_mfa_attempt_code\");\n      if (code) {\n        setAttemptCode(code);\n      }\n    }\n  }, [ attemptCode]);\n\n  // Handle OTP verification when code is complete\n  useEffect(() => {\n    if (otp.length === 6 && !submitting) {\n      // Blur any focused inputs\n      if (document.activeElement instanceof HTMLElement) {\n        document.activeElement.blur();\n      }\n      if (formRef.current) {\n        const inputs = formRef.current.querySelectorAll('input');\n        for (const input of inputs) {\n          input.blur();\n        }\n      }\n\n      setSubmitting(true);\n      setError(null);\n\n      if (attemptCode) {\n        stackApp\n          .signInWithMfa(otp, attemptCode, { noRedirect: true })\n          .then(async (result) => {\n            if (result.status === \"ok\") {\n              setVerified(true);\n\n              // Cleanup session storage\n              if (typeof window !== \"undefined\") {\n                window.sessionStorage.removeItem(\"stack_mfa_attempt_code\");\n              }\n\n              if (onSuccess) {\n                onSuccess();\n              } else {\n                await stackApp.redirectToAfterSignIn();\n              }\n            } else {\n              throw result.error;\n            }\n          })\n          .catch((e) => {\n            if (e instanceof KnownErrors.InvalidTotpCode) {\n              setError(t(\"Invalid TOTP code\"));\n            } else {\n              setError(t(\"Verification failed\"));\n            }\n          })\n          .finally(() => {\n            setSubmitting(false);\n            if (!verified) {\n              setOtp(\"\");\n            }\n          });\n      } else {\n        setSubmitting(false);\n        setError(t(\"Missing verification information\"));\n      }\n    }\n\n    // Clear error when user is typing\n    if (otp.length !== 0 && otp.length !== 6) {\n      setError(null);\n    }\n  }, [otp, submitting, onSuccess, attemptCode, stackApp, t, verified]);\n\n\n  const inputStyleClass = useMemo(() => {\n    if (verified) {\n      return \"opacity-85 transition-all duration-300\";\n    }\n\n    if (error) {\n      return \"ring-red-500 border-red-500\";\n    }\n\n    return \"focus:ring-primary/50\";\n  }, [error, verified]);\n\n  return (\n    <div className=\"flex flex-col items-stretch stack-scope\">\n      <form ref={formRef} className=\"w-full flex flex-col items-center gap-4\">\n        <InputOTP\n          maxLength={6}\n          type=\"text\"\n          inputMode=\"numeric\"\n          placeholder=\"······\"\n          value={otp}\n          onChange={(value) => setOtp(value.toUpperCase())}\n          disabled={submitting || verified}\n        >\n          <InputOTPGroup>\n            {[0, 1, 2, 3, 4, 5].map((index) => (\n              <InputOTPSlot\n                key={index}\n                index={index}\n                size=\"lg\"\n                className={cn(\n                  \"border focus:ring-2 transition-all\",\n                  inputStyleClass,\n                )}\n              />\n            ))}\n          </InputOTPGroup>\n        </InputOTP>\n\n        {/* Verification Status */}\n        <div className=\"h-8 flex flex-col gap-4 items-center justify-center w-full\">\n          {verified ? (\n            <div className=\"flex items-center gap-2 animate-in fade-in duration-300 slide-in-from-bottom-2\">\n              <CheckIcon className=\"w-5 h-5 text-green-600 animate-in zoom-in duration-300\" />\n              <Typography className=\"text-sm font-medium\">{t(\"Verified! Redirecting...\")}</Typography>\n            </div>\n          ) : submitting ? (\n            <div className=\"flex items-center gap-2\">\n              <Spinner className=\"text-primary h-4 w-4\" />\n              <Typography className=\"text-sm\">{t(\"Verifying...\")}</Typography>\n            </div>\n          ) : null}\n\n          {/* Error reporting */}\n          {error !== null && !submitting && !verified ? <FormWarningText text={error} /> : null}\n        </div>\n      </form>\n\n      {/* Cancel Button */}\n      {onCancel && !verified && (\n        <Button\n          variant=\"link\"\n          onClick={onCancel}\n          className=\"underline mt-4 self-center\"\n          disabled={submitting || verified}\n        >\n          {t(\"Cancel\")}\n        </Button>\n      )}\n    </div>\n  );\n}\n\nexport function MFA(props: {\n  fullPage?: boolean,\n  onSuccess?: () => void,\n  onCancel?: () => void,\n}) {\n  const { t } = useTranslation();\n\n  const headerText = t(\"Multi-Factor Authentication\");\n  const instructionText = t(\"Enter the six-digit code from your authenticator app\");\n\n  if (props.fullPage) {\n    return (\n      <MaybeFullPage fullPage={true}>\n        <div\n          className=\"stack-scope flex flex-col items-stretch\"\n          style={{ maxWidth: \"380px\", flexBasis: \"380px\", padding: \"1rem\" }}\n        >\n          <div className=\"text-center mb-6\">\n            <Typography type=\"h2\">{headerText}</Typography>\n            <Typography className=\"mt-2\">{instructionText}</Typography>\n          </div>\n          <MfaForm onSuccess={props.onSuccess} onCancel={props.onCancel} />\n        </div>\n      </MaybeFullPage>\n    );\n  }\n\n  return (\n    <div className=\"flex flex-col items-stretch stack-scope\">\n      <Typography className=\"mb-4 text-center\">{instructionText}</Typography>\n      <MfaForm onSuccess={props.onSuccess} onCancel={props.onCancel} />\n    </div>\n  );\n}\n"],"mappings":"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","names":[]}