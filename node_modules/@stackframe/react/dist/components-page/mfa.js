"use client";
"use strict";
"use client";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/components-page/mfa.tsx
var mfa_exports = {};
__export(mfa_exports, {
  MFA: () => MFA
});
module.exports = __toCommonJS(mfa_exports);
var import_stack_shared = require("@stackframe/stack-shared");
var import_stack_ui = require("@stackframe/stack-ui");
var import_lucide_react = require("lucide-react");
var import_react = require("react");
var import__ = require("../index.js");
var import_form_warning = require("../components/elements/form-warning.js");
var import_maybe_full_page = require("../components/elements/maybe-full-page.js");
var import_translations = require("../lib/translations.js");
var import_jsx_runtime = require("react/jsx-runtime");
function MfaForm({ onSuccess, onCancel }) {
  const stackApp = (0, import__.useStackApp)();
  const { t } = (0, import_translations.useTranslation)();
  const [otp, setOtp] = (0, import_react.useState)("");
  const formRef = (0, import_react.useRef)(null);
  const [submitting, setSubmitting] = (0, import_react.useState)(false);
  const [error, setError] = (0, import_react.useState)(null);
  const [verified, setVerified] = (0, import_react.useState)(false);
  const [attemptCode, setAttemptCode] = (0, import_react.useState)(null);
  (0, import_react.useEffect)(() => {
    if (!attemptCode && typeof window !== "undefined") {
      const code = window.sessionStorage.getItem("stack_mfa_attempt_code");
      if (code) {
        setAttemptCode(code);
      }
    }
  }, [attemptCode]);
  (0, import_react.useEffect)(() => {
    if (otp.length === 6 && !submitting) {
      if (document.activeElement instanceof HTMLElement) {
        document.activeElement.blur();
      }
      if (formRef.current) {
        const inputs = formRef.current.querySelectorAll("input");
        for (const input of inputs) {
          input.blur();
        }
      }
      setSubmitting(true);
      setError(null);
      if (attemptCode) {
        stackApp.signInWithMfa(otp, attemptCode, { noRedirect: true }).then(async (result) => {
          if (result.status === "ok") {
            setVerified(true);
            if (typeof window !== "undefined") {
              window.sessionStorage.removeItem("stack_mfa_attempt_code");
            }
            if (onSuccess) {
              onSuccess();
            } else {
              await stackApp.redirectToAfterSignIn();
            }
          } else {
            throw result.error;
          }
        }).catch((e) => {
          if (e instanceof import_stack_shared.KnownErrors.InvalidTotpCode) {
            setError(t("Invalid TOTP code"));
          } else {
            setError(t("Verification failed"));
          }
        }).finally(() => {
          setSubmitting(false);
          if (!verified) {
            setOtp("");
          }
        });
      } else {
        setSubmitting(false);
        setError(t("Missing verification information"));
      }
    }
    if (otp.length !== 0 && otp.length !== 6) {
      setError(null);
    }
  }, [otp, submitting, onSuccess, attemptCode, stackApp, t, verified]);
  const inputStyleClass = (0, import_react.useMemo)(() => {
    if (verified) {
      return "opacity-85 transition-all duration-300";
    }
    if (error) {
      return "ring-red-500 border-red-500";
    }
    return "focus:ring-primary/50";
  }, [error, verified]);
  return /* @__PURE__ */ (0, import_jsx_runtime.jsxs)("div", { className: "flex flex-col items-stretch stack-scope", children: [
    /* @__PURE__ */ (0, import_jsx_runtime.jsxs)("form", { ref: formRef, className: "w-full flex flex-col items-center gap-4", children: [
      /* @__PURE__ */ (0, import_jsx_runtime.jsx)(
        import_stack_ui.InputOTP,
        {
          maxLength: 6,
          type: "text",
          inputMode: "numeric",
          placeholder: "\xB7\xB7\xB7\xB7\xB7\xB7",
          value: otp,
          onChange: (value) => setOtp(value.toUpperCase()),
          disabled: submitting || verified,
          children: /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_stack_ui.InputOTPGroup, { children: [0, 1, 2, 3, 4, 5].map((index) => /* @__PURE__ */ (0, import_jsx_runtime.jsx)(
            import_stack_ui.InputOTPSlot,
            {
              index,
              size: "lg",
              className: (0, import_stack_ui.cn)(
                "border focus:ring-2 transition-all",
                inputStyleClass
              )
            },
            index
          )) })
        }
      ),
      /* @__PURE__ */ (0, import_jsx_runtime.jsxs)("div", { className: "h-8 flex flex-col gap-4 items-center justify-center w-full", children: [
        verified ? /* @__PURE__ */ (0, import_jsx_runtime.jsxs)("div", { className: "flex items-center gap-2 animate-in fade-in duration-300 slide-in-from-bottom-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_lucide_react.CheckIcon, { className: "w-5 h-5 text-green-600 animate-in zoom-in duration-300" }),
          /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_stack_ui.Typography, { className: "text-sm font-medium", children: t("Verified! Redirecting...") })
        ] }) : submitting ? /* @__PURE__ */ (0, import_jsx_runtime.jsxs)("div", { className: "flex items-center gap-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_stack_ui.Spinner, { className: "text-primary h-4 w-4" }),
          /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_stack_ui.Typography, { className: "text-sm", children: t("Verifying...") })
        ] }) : null,
        error !== null && !submitting && !verified ? /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_form_warning.FormWarningText, { text: error }) : null
      ] })
    ] }),
    onCancel && !verified && /* @__PURE__ */ (0, import_jsx_runtime.jsx)(
      import_stack_ui.Button,
      {
        variant: "link",
        onClick: onCancel,
        className: "underline mt-4 self-center",
        disabled: submitting || verified,
        children: t("Cancel")
      }
    )
  ] });
}
function MFA(props) {
  const { t } = (0, import_translations.useTranslation)();
  const headerText = t("Multi-Factor Authentication");
  const instructionText = t("Enter the six-digit code from your authenticator app");
  if (props.fullPage) {
    return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_maybe_full_page.MaybeFullPage, { fullPage: true, children: /* @__PURE__ */ (0, import_jsx_runtime.jsxs)(
      "div",
      {
        className: "stack-scope flex flex-col items-stretch",
        style: { maxWidth: "380px", flexBasis: "380px", padding: "1rem" },
        children: [
          /* @__PURE__ */ (0, import_jsx_runtime.jsxs)("div", { className: "text-center mb-6", children: [
            /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_stack_ui.Typography, { type: "h2", children: headerText }),
            /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_stack_ui.Typography, { className: "mt-2", children: instructionText })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime.jsx)(MfaForm, { onSuccess: props.onSuccess, onCancel: props.onCancel })
        ]
      }
    ) });
  }
  return /* @__PURE__ */ (0, import_jsx_runtime.jsxs)("div", { className: "flex flex-col items-stretch stack-scope", children: [
    /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_stack_ui.Typography, { className: "mb-4 text-center", children: instructionText }),
    /* @__PURE__ */ (0, import_jsx_runtime.jsx)(MfaForm, { onSuccess: props.onSuccess, onCancel: props.onCancel })
  ] });
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  MFA
});
//# sourceMappingURL=mfa.js.map