"use client";
"use strict";
"use client";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/components/selected-team-switcher.tsx
var selected_team_switcher_exports = {};
__export(selected_team_switcher_exports, {
  SelectedTeamSwitcher: () => SelectedTeamSwitcher
});
module.exports = __toCommonJS(selected_team_switcher_exports);
var import_promises = require("@stackframe/stack-shared/dist/utils/promises");
var import_stack_ui = require("@stackframe/stack-ui");
var import_react = require("react");
var import__ = require("../index.js");
var import_team_switcher = require("./team-switcher.js");
var import_jsx_runtime = require("react/jsx-runtime");
function SelectedTeamSwitcher(props) {
  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_react.Suspense, { fallback: /* @__PURE__ */ (0, import_jsx_runtime.jsx)(Fallback, {}), children: /* @__PURE__ */ (0, import_jsx_runtime.jsx)(Inner, { ...props }) });
}
function Fallback() {
  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_stack_ui.Skeleton, { className: "h-9 w-full max-w-64 stack-scope" });
}
function Inner(props) {
  const appFromHook = (0, import__.useStackApp)();
  const userFromHook = (0, import__.useUser)();
  const app = props.mockUser ? {
    useProject: () => props.mockProject || { config: { clientTeamCreationEnabled: false } },
    useNavigate: () => () => {
    },
    // Mock navigate function
    urls: { accountSettings: "/account-settings" }
  } : appFromHook;
  const user = props.mockUser ? {
    selectedTeam: props.mockUser.selectedTeam,
    useTeams: () => props.mockTeams || [],
    setSelectedTeam: async () => {
    }
    // Mock function
  } : userFromHook;
  const navigate = app.useNavigate();
  (0, import_react.useEffect)(() => {
    if (!props.noUpdateSelectedTeam && props.selectedTeam && !props.mockUser) {
      (0, import_promises.runAsynchronouslyWithAlert)(user?.setSelectedTeam(props.selectedTeam));
    }
  }, [props.noUpdateSelectedTeam, props.selectedTeam, props.mockUser]);
  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(
    import_team_switcher.TeamSwitcher,
    {
      team: props.selectedTeam,
      allowNull: props.allowNull,
      nullLabel: props.nullLabel,
      triggerClassName: props.triggerClassName,
      onChange: async (team) => {
        if (props.onChange) {
          props.onChange(team);
        }
        if (props.mockUser) return;
        if (!props.noUpdateSelectedTeam) {
          await user?.setSelectedTeam(team);
        }
        if (props.urlMap) {
          navigate(props.urlMap(team));
        }
      }
    }
  );
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  SelectedTeamSwitcher
});
//# sourceMappingURL=selected-team-switcher.js.map